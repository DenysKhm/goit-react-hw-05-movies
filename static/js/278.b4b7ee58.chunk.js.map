{"version":3,"file":"static/js/278.b4b7ee58.chunk.js","mappings":"4TAMO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,IAAAA,IAAU,sBAD9B,cACGC,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAsCC,EAAtC,+BAA8C,GAA9C,SACoBJ,IAAAA,IAAA,6BAAgCI,IADpD,cACGH,EADH,yBAEIA,EAASC,KAAKG,SAFlB,mEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBP,IAAAA,IAAA,iBAAoBO,IADxC,cACGN,EADH,yBAEIA,EAASC,MAFb,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBT,IAAAA,IAAA,gBAAmBS,EAAnB,aADpB,cACGR,EADH,yBAEIA,EAASC,MAFb,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBT,IAAAA,IAAA,gBAAmBS,EAAnB,aADpB,cACGR,EADH,yBAEIA,EAASC,MAFb,kEAzBPF,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CAAEW,QAFd,mC,2FCyCZ,UAvCe,WACb,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAC/BC,GAAWC,EAAAA,EAAAA,MAgBjB,OANAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIN,GACPA,IACLf,EAAAA,EAAAA,IAAuBe,GAAaO,KAAKX,EAC1C,GAAE,CAACI,KAGF,iCACE,kBAAMQ,SAhBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACT1B,EAAQyB,EAAKE,SAAS,GAAGC,MAC/Bf,EAAgB,CAAEgB,OAAQ7B,IAC1ByB,EAAKK,OACN,EAUG,WACE,kBAAOC,KAAK,OAAOC,KAAK,eACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGtB,GACCA,EAAYwB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAMtB,GAAzC,SAAqDkB,KAD9CC,EADK,OAMpB,SAAC,KAAD,MAGL,C","sources":["components/services/API.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '007a4826f670f8c4fc5714195603888e'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\naxios.defaults.params = { api_key: KEY};\n\nexport async function fetchGetTrendMovies() {\n    const response = await axios.get('trending/movie/day')\n    return response.data\n}\n\nexport async function fetchSearchMovieByWord(query = '') {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  }\n\nexport async function fetchMovieById(movieId) {\n    const response = await axios.get(`/movie/${movieId}`)\n    return response.data\n}\n\n\nexport async function fetchMovieCast(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/credits`)\n    return response.data\n}\n\n\nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/reviews`)\n    return response.data\n}\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport { Outlet, Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchSearchMovieByWord } from 'components/services/API';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('search');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.elements[0].value;\n    setSearchParams({ search: query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    console.log(querySearch);\n    if (!querySearch) return;\n    fetchSearchMovieByWord(querySearch).then(setSearchMovie);\n  }, [querySearch]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movieName\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchMovie &&\n          searchMovie.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n            </li>\n          ))}\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movies\n"],"names":["fetchGetTrendMovies","axios","response","data","fetchSearchMovieByWord","query","results","fetchMovieById","movieId","fetchMovieCast","movie_id","fetchMovieReviews","api_key","useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","querySearch","get","location","useLocation","useEffect","console","log","then","onSubmit","e","preventDefault","form","target","elements","value","search","reset","type","name","map","title","id","to","state","from"],"sourceRoot":""}