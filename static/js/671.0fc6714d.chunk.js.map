{"version":3,"file":"static/js/671.0fc6714d.chunk.js","mappings":"4TAMO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,IAAAA,IAAU,sBAD9B,cACGC,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAsCC,EAAtC,+BAA8C,GAA9C,SACoBJ,IAAAA,IAAA,6BAAgCI,IADpD,cACGH,EADH,yBAEIA,EAASC,KAAKG,SAFlB,mEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBP,IAAAA,IAAA,iBAAoBO,IADxC,cACGN,EADH,yBAEIA,EAASC,MAFb,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBT,IAAAA,IAAA,gBAAmBS,EAAnB,aADpB,cACGR,EADH,yBAEIA,EAASC,MAFb,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBT,IAAAA,IAAA,gBAAmBS,EAAnB,aADpB,cACGR,EADH,yBAEIA,EAASC,MAFb,kEAzBPF,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CAAEW,QAFd,mC,6JCCCC,EAAaC,EAAAA,GAAAA,IAAH,kEAKVC,EAAWD,EAAAA,GAAAA,IAAH,4CAIRE,EAAKF,EAAAA,GAAAA,GAAH,gDAIFG,EAAQH,EAAAA,GAAAA,GAAH,gDAILI,EAAOJ,EAAAA,GAAAA,EAAH,gDAIJK,EAAQL,EAAAA,GAAAA,GAAH,iEAKLM,GAAYN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,iEAKTQ,EAAUR,EAAAA,GAAAA,IAAH,gDAIPS,EAAST,EAAAA,GAAAA,OAAH,gD,SCQnB,EAzCqB,WACnB,IAAMU,ECFqB,WAC3B,IAAQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAA0BkB,EAAAA,EAAAA,UAAS,MAAnC,eAAOF,EAAP,KAAcG,EAAd,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAeC,GAASqB,KAAKF,EAC9B,GAAE,CAACnB,IACGgB,CACR,CDNeM,GACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGV,IACC,iCACA,SAACD,EAAD,CAAQY,QAAS,0BAAMJ,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUG,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAAjB,sBACA,UAACxB,EAAD,YACE,gBACEyB,IAAG,8DAAyDd,EAAMe,aAClEC,IAAKhB,EAAMiB,MACXC,MAAM,SAER,UAAC3B,EAAD,YACE,SAACC,EAAD,UAAKQ,EAAMiB,SACX,UAACvB,EAAD,0BAAmBM,EAAMmB,aAAzB,QACA,SAAC1B,EAAD,wBACA,SAACC,EAAD,UAAOM,EAAMoB,YACb,SAAC3B,EAAD,uBACA,SAACC,EAAD,UACGM,EAAMqB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAChB,SAAC7B,EAAD,UAAiB4B,GAALC,EADI,aAMtB,UAAC1B,EAAD,YACE,mDACA,SAACF,EAAD,CAAW6B,GAAI,OAAQb,MAAOH,EAASG,MAAvC,mBACA,SAAChB,EAAD,CAAW6B,GAAI,UAAWb,MAAOH,EAASG,MAA1C,yBAEF,SAAC,KAAD,QAKT,C","sources":["components/services/API.js","pages/MovieDetails/MovieDerails.styled.js","pages/MovieDetails/MovieDetails.jsx","components/hooks/useFetchMovie.js"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '007a4826f670f8c4fc5714195603888e'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\naxios.defaults.params = { api_key: KEY};\n\nexport async function fetchGetTrendMovies() {\n    const response = await axios.get('trending/movie/day')\n    return response.data\n}\n\nexport async function fetchSearchMovieByWord(query = '') {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  }\n\nexport async function fetchMovieById(movieId) {\n    const response = await axios.get(`/movie/${movieId}`)\n    return response.data\n}\n\n\nexport async function fetchMovieCast(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/credits`)\n    return response.data\n}\n\n\nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/reviews`)\n    return response.data\n}\n\n\n\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom'\n\nexport const FilmDetail = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nexport const FilmInfo = styled.div`\n  padding: 0 10px;\n`;\n\nexport const H1 = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Genre = styled.li`\n  display: flex;\n  margin-bottom: 3px;\n`;\n\nexport const NavLinkAI = styled(NavLink)`\n  display: flex;\n  margin-bottom: 3px;\n`;\n\nexport const AddInfo = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const GoBack = styled.button`\n  margin-bottom: 20px;\n`;\n","import { useFetchMovie } from 'components/hooks/useFetchMovie';\nimport { Outlet } from 'react-router-dom';\nimport { FilmDetail, FilmInfo, Title, H1, Text, Genre, NavLinkAI, AddInfo, GoBack } from './MovieDerails.styled';\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n  const movie = useFetchMovie();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    <>\n      {movie && (\n        <>\n        <GoBack onClick={() => navigate(location?.state?.from ?? '/')}>Go back</GoBack>\n        <FilmDetail>\n          <img\n            src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`}\n            alt={movie.title}\n            width=\"200\"\n          />\n          <FilmInfo>\n            <H1>{movie.title}</H1>\n            <Text>User score: {movie.vote_average}%</Text>\n            <Title>Overview</Title>\n            <Text>{movie.overview}</Text>\n            <Title>Genres:</Title>\n            <Text>\n              {movie.genres.map(({ name, id }) => (\n                <Genre key={id}>{name}</Genre>\n              ))}\n            </Text>\n          </FilmInfo>\n          </FilmDetail>\n          <AddInfo>\n            <p>Additional information</p>\n            <NavLinkAI to={'cast'} state={location.state}>Cast</NavLinkAI>\n            <NavLinkAI to={'reviews'} state={location.state}>Reviews</NavLinkAI>\n          </AddInfo>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails\n","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieById } from \"components/services/API\"\n\nexport const useFetchMovie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n  return movie\n};\n"],"names":["fetchGetTrendMovies","axios","response","data","fetchSearchMovieByWord","query","results","fetchMovieById","movieId","fetchMovieCast","movie_id","fetchMovieReviews","api_key","FilmDetail","styled","FilmInfo","H1","Title","Text","Genre","NavLinkAI","NavLink","AddInfo","GoBack","movie","useParams","useState","setMovie","useEffect","then","useFetchMovie","navigate","useNavigate","location","useLocation","onClick","state","from","src","poster_path","alt","title","width","vote_average","overview","genres","map","name","id","to"],"sourceRoot":""}